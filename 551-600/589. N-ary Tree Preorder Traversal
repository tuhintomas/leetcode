Given an n-ary tree, return the preorder traversal of its nodes' values.

For example, given a 3-ary tree:

 



 

Return its preorder traversal as: [1,3,5,6,2,4].

 

Note:

Recursive solution is trivial, could you do it iteratively?






Runtime: 660 ms, faster than 97.98% of Python online submissions for N-ary Tree Preorder Traversal.
Memory Usage: 107.8 MB, less than 8.00% of Python online submissions for N-ary Tree Preorder Traversal.




class Solution(object):
    def preorder(self, root):
        """
        :type root: Node
        :rtype: List[int]
        """
        if root==None:
            return []
        l=[]
        self.helper(root,l)
        return l
    def helper(self,root,l):
        if root==None:
            return
        l.append(root.val)
        for child in root.children:
            self.helper(child,l)
